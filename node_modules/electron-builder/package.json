{
  "_args": [
    [
      "electron-builder",
      "/home/johan/Development/Software Development/PixelPencil"
    ]
  ],
  "_from": "electron-builder@latest",
  "_hasShrinkwrap": false,
  "_id": "electron-builder@22.1.0",
  "_inCache": true,
  "_installable": true,
  "_location": "/electron-builder",
  "_nodeVersion": "12.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/electron-builder_22.1.0_1571815835989_0.7595349252571524"
  },
  "_npmUser": {
    "email": "develar@gmail.com",
    "name": "develar"
  },
  "_npmVersion": "6.12.0",
  "_phantomChildren": {},
  "_requested": {
    "name": "electron-builder",
    "raw": "electron-builder",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/electron-builder/-/electron-builder-22.1.0.tgz",
  "_shasum": "65b23411e3c39a83b52743ed18980b97f8314d50",
  "_shrinkwrap": null,
  "_spec": "electron-builder",
  "_where": "/home/johan/Development/Software Development/PixelPencil",
  "author": {
    "name": "Vladimir Krivosheev"
  },
  "bin": {
    "electron-builder": "./out/cli/cli.js",
    "install-app-deps": "./out/cli/install-app-deps.js"
  },
  "bugs": {
    "url": "https://github.com/electron-userland/electron-builder/issues"
  },
  "contributors": [
    {
      "name": "Stefan Judis"
    }
  ],
  "dependencies": {
    "app-builder-lib": "22.1.0",
    "bluebird-lst": "^1.0.9",
    "builder-util": "22.1.0",
    "builder-util-runtime": "8.4.0",
    "chalk": "^2.4.2",
    "dmg-builder": "21.2.0",
    "fs-extra": "^8.1.0",
    "is-ci": "^2.0.0",
    "lazy-val": "^1.0.4",
    "read-config-file": "5.0.0",
    "sanitize-filename": "^1.6.3",
    "update-notifier": "^3.0.1",
    "yargs": "^14.0.0"
  },
  "description": "A complete solution to package and build a ready for distribution Electron app for MacOS, Windows and Linux with “auto update” support out of the box",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "fileCount": 20,
    "integrity": "sha512-uu2W9BLG38D0i2PG6dHupmOYc+q/TRL+Ztf8xitqK+2Quq33PFbeN0ipfySuVEDg4I6whDRBOgxBEWwnUYqZZQ==",
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdsAGcCRA9TVsSAnZWagAA1owP/19I4eVOHqfyHt0Y1jne\nmowFHfS22xxNBPLKt/PJLMOj5vsOgMft/SiR72pHHgCYMpyhnTdtwY3NznWO\nypbDDNYtwjqjfcpXVrEsTy1w83iVEP161NB6or0Vd+nmdhYYi34iGPaTQoBd\njG10g0qqTpQ6EtYoq+t8zcj+N1QZ8Y7sla8WfZoWghSM2LyzwpcBJp/ZDEyJ\nII+bZ+86Bf6XbufP+vc/4+CX81mbgrs0CXbGhCZSfMcHTUl8UZuiNJkukXWz\nZFYPsc5xlhkmz0mutKC4vr5ES1bRN3IPjQFxS9fopUlPQ5vHXvXv/tRNZEAU\nlgMw4gmVEBrYR5M4GFKsWQ912N2j2kFXisWi83xaLUtyKolF3QO7P8Bw95Zi\nyDzAgu/2etGXeYcFcSKgGRnQjWP1wNzio2gQmV2ilQuFEePFNc3zi7kexVeK\nV9mTusoDthLqenqAmvVR0pj1bWmHftjEssx/BYOGj8oXe7/t0C+WaaHVCcHv\nYRNjQRPkRhuyLqUSEGa97aKT2A9ysJY+FTAXmOXDnNDWES6xJQB5PtlayBRC\nKa0sX3N39EzsbO1V+LzqmOP/Fq32MT4KctZosgE7yU7dNXNx9mTW2EBv2n0K\n5OAkTPVqRF/ANtEoWOre5OOpEmKJrw83nI1VFlBZmNF8Ur0672IbdiZlfOjv\n668+\r\n=Xh/X\r\n-----END PGP SIGNATURE-----\r\n",
    "shasum": "65b23411e3c39a83b52743ed18980b97f8314d50",
    "tarball": "https://registry.npmjs.org/electron-builder/-/electron-builder-22.1.0.tgz",
    "unpackedSize": 71211
  },
  "engines": {
    "node": ">=8.12.0"
  },
  "homepage": "https://github.com/electron-userland/electron-builder",
  "keywords": [
    "Mac",
    "MacOS",
    "OS X",
    "Windows",
    "app",
    "appx",
    "build",
    "builder",
    "dmg",
    "electron",
    "exe",
    "install",
    "installer",
    "msi",
    "nsis",
    "pack",
    "packager",
    "pkg",
    "portable",
    "setup",
    "snap"
  ],
  "license": "MIT",
  "main": "out/index.js",
  "maintainers": [
    {
      "name": "develar",
      "email": "develar@gmail.com"
    },
    {
      "name": "stefanjudis",
      "email": "stefanjudis@gmail.com"
    }
  ],
  "name": "electron-builder",
  "optionalDependencies": {},
  "publishConfig": {
    "tag": "next"
  },
  "readme": "# electron-builder [![npm version](https://img.shields.io/npm/v/electron-builder.svg?label=latest)](https://yarn.pm/electron-builder) [![downloads per month](https://img.shields.io/npm/dm/electron-builder.svg)](https://yarn.pm/electron-builder) [![donate](https://img.shields.io/badge/donate-donorbox-green.svg)](https://www.electron.build/donate) [![project chat](https://img.shields.io/badge/chat-on_zulip-brightgreen.svg)](https://electron-builder.zulipchat.com)\nA complete solution to package and build a ready for distribution [Electron](https://electronjs.org), [Proton Native](https://proton-native.js.org/) app for macOS, Windows and Linux with “auto update” support out of the box.\n\nSee documentation on [electron.build](https://www.electron.build).\n\n* NPM packages management:\n    * [Native application dependencies](https://electron.atom.io/docs/tutorial/using-native-node-modules/) compilation (including [Yarn](http://yarnpkg.com/) support).\n    * Development dependencies are never included. You don't need to ignore them explicitly.\n    * [Two package.json structure](https://www.electron.build/tutorials/two-package-structure) is supported, but you are not forced to use it even if you have native production dependencies.\n* [Code Signing](https://www.electron.build/code-signing) on a CI server or development machine.\n* [Auto Update](https://www.electron.build/auto-update) ready application packaging.\n* Numerous target formats:\n    * All platforms: `7z`, `zip`, `tar.xz`, `tar.7z`, `tar.lz`, `tar.gz`, `tar.bz2`, `dir` (unpacked directory).\n    * [macOS](https://www.electron.build/configuration/mac): `dmg`, `pkg`, `mas`.\n    * [Linux](https://www.electron.build/configuration/linux): [AppImage](http://appimage.org), [snap](http://snapcraft.io), debian package (`deb`), `rpm`, `freebsd`, `pacman`, `p5p`, `apk`.\n    * [Windows](https://www.electron.build/configuration/win): `nsis` (Installer), `nsis-web` (Web installer), `portable` (portable app without installation), AppX (Windows Store), MSI, Squirrel.Windows.\n* [Publishing artifacts](https://www.electron.build/configuration/publish) to GitHub Releases, Amazon S3, DigitalOcean Spaces and Bintray.\n* Advanced building:\n    * Pack in a distributable format [already packaged app](https://www.electron.build/#pack-only-in-a-distributable-format).\n    * Separate [build steps](https://github.com/electron-userland/electron-builder/issues/1102#issuecomment-271845854).\n    * Build and publish in parallel, using hard links on CI server to reduce IO and disk space usage.\n    * [electron-compile](https://github.com/electron/electron-compile) support (compile for release-time on the fly on build).\n* [Docker](https://www.electron.build/multi-platform-build#docker) images to build Electron app for Linux or Windows on any platform.\n* [Proton Native](https://www.electron.build/configuration/configuration/#proton-native) support.\n* Downloads all required tools files on demand automatically (e.g. to code sign windows application, to make AppX), no need to setup.\n\n| Question | Answer |\n|----------|-------|\n| “I want to configure electron-builder” | [See options](https://electron.build/configuration/configuration) |\n| “I have a question” | [Open an issue](https://github.com/electron-userland/electron-builder/issues) or [join the chat](https://electron-builder.zulipchat.com/) |\n| “I found a bug” | [Open an issue](https://github.com/electron-userland/electron-builder/issues/new) |\n| “I want to support development” | [Donate](https://www.electron.build/donate) |\n\n## Installation\n[Yarn](http://yarnpkg.com/) is [strongly](https://github.com/electron-userland/electron-builder/issues/1147#issuecomment-276284477) recommended instead of npm.\n\n`yarn add electron-builder --dev`\n\n## Quick Setup Guide\n\n[electron-webpack-quick-start](https://github.com/electron-userland/electron-webpack-quick-start) is a recommended way to create a new Electron application. See [Boilerplates](https://www.electron.build/#boilerplates).\n\n1. Specify the standard fields in the application `package.json` — [name](https://electron.build/configuration/configuration#Metadata-name), `description`, `version` and [author](https://docs.npmjs.com/files/package.json#people-fields-author-contributors).\n\n2. Specify the [build](https://electron.build/configuration/configuration#build) configuration in the `package.json` as follows:\n    ```json\n    \"build\": {\n      \"appId\": \"your.id\",\n      \"mac\": {\n        \"category\": \"your.app.category.type\"\n      }\n    }\n    ```\n   See [all options](https://www.electron.build/configuration/configuration). Option [files](https://www.electron.build/configuration/contents#files) to indicate which files should be packed in the final application, including the entry file, maybe required.\n\n3. Add [icons](https://www.electron.build/icons).\n\n4. Add the [scripts](https://docs.npmjs.com/cli/run-script) key to the development `package.json`:\n    ```json\n    \"scripts\": {\n      \"pack\": \"electron-builder --dir\",\n      \"dist\": \"electron-builder\"\n    }\n    ```\n    Then you can run `yarn dist` (to package in a distributable format (e.g. dmg, windows installer, deb package)) or `yarn pack` (only generates the package directory without really packaging it. This is useful for testing purposes).\n\n    To ensure your native dependencies are always matched electron version, simply add script `\"postinstall\": \"electron-builder install-app-deps\"` to your `package.json`.\n\n5. If you have native addons of your own that are part of the application (not as a dependency), set [nodeGypRebuild](https://www.electron.build/configuration/configuration#Configuration-nodeGypRebuild) to `true`.\n\nPlease note that everything is packaged into an asar archive [by default](https://electron.build/configuration/configuration#Configuration-asar).\n\nFor an app that will be shipped to production, you should sign your application. See [Where to buy code signing certificates](https://www.electron.build/code-signing#where-to-buy-code-signing-certificate).\n\n## Donate\n\nWe do this open source work in our free time. If you'd like us to invest more time on it, please [donate](https://www.electron.build/donate). Donation can be used to increase some issue priority.\n\n## Sponsors\n\n<a href=\"https://workflowy.com\"><img src=\"https://workflowy.com/media/i/icon-28x28.png\" alt=\"WorkFlowy\" title=\"WorkFlowy\" width=\"28\" height=\"28\" align=\"middle\"/></a>\n<a href=\"https://tidepool.org\"><img src=\"https://www.electron.build/sponsor-logos/Tidepool_Logo_Light.svg\" alt=\"Tidepool\" title=\"Tidepool\" align=\"middle\"/></a>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/electron-userland/electron-builder.git"
  },
  "typings": "./out/index.d.ts",
  "version": "22.1.0"
}
